  try
            {
                var proyectoUpdate = await _context.Proyectos
                   .Include(s => s.DetProyectos)
                   .FirstAsync(s => s.Id == proyecto.Id);

                proyectoUpdate.Nombre = proyecto.Nombre;
                proyectoUpdate.Descripcion = proyecto.Descripcion;
                proyectoUpdate.FechaInicial = proyecto.FechaInicial;

                var detNew = proyecto.DetProyectos.Where(s => s.Id == 0);
                foreach (var d in detNew)
                {
                    proyectoUpdate.DetProyectos.Add(d);
                }
                var detUpdate = proyecto.DetProyectos.Where(s => s.Id > 0);
                foreach (var d in detUpdate)
                {
                    var det = proyectoUpdate.DetProyectos.FirstOrDefault(s => s.Id == d.Id);
                    det.Tarea = d.Tarea;
                    det.Orden = d.Orden;
                }
                //
                var delDet = proyecto.DetProyectos.Where(s => s.Id < 0).ToList();
                if (delDet != null && delDet.Count > 0)
                {
                    foreach (var d in delDet)
                    {
                        var det = await _context.DetProyectos.FindAsync(id);
                        if (det != null)
                        {
                            _context.DetProyectos.Remove(det);
                        }
                    }
                    _context.Update(proyectoUpdate);
                    await _context.SaveChangesAsync();

                }
            }
            catch (DbUpdateConcurrencyException)
            {
                if (!ProyectoExists(proyecto.Id))
                {
                    return NotFound();
                }
                else
                {
                    throw;
                }
            }
                return RedirectToAction(nameof(Index));
        }